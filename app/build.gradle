apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
//        applicationId AppId
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
//        versionCode rootProject.VersionCode as int
//        versionName rootProject.VersionName
        multiDexEnabled rootProject.ext.android.multiDexEnabled
        manifestPlaceholders = rootProject.ext.android.manifestPlaceholders
    }

    lintOptions {
        abortOnError false // 即使有报错也不会停止打包
        checkReleaseBuilds false // 打包Release版本的时候也不进行Lint检测
    }
    compileOptions {
        sourceCompatibility rootProject.ext.java.javaVersion
        targetCompatibility rootProject.ext.java.javaVersion
    }

    buildTypes {
        release {
//            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //混淆
            minifyEnabled false
            //是否压缩
            zipAlignEnabled true
            //清除不用的资源
            shrinkResources false
        }

        debug {
//            signingConfig signingConfigs.release
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']//就是你存放so文件夹的不同cpu目录地址
        }
    }

    flavorDimensions "api"

    productFlavors {
//        //开发环境
//        develop {
////            buildConfigField "String", "BASE_URL", '"http://192.168.31.181:8888"'
//            buildConfigField "String", "BASE_URL", '"http://139.224.229.158/ctx"'
//            buildConfigField("boolean", "IsDebug", "true")
//        }
        //生产环境版本
        product {
//            buildConfigField "String", "_ID", "\"$AppId\""
//            buildConfigField "String", "_APPNAME", "\"$AppName\""
//            buildConfigField("boolean", "IsDebug", IsDebug)
        }
    }


}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation rootProject.ext.dependence.libSupportV7
    annotationProcessor rootProject.ext.dependence.libButterKnifeCompile
    api project(path: ':app_base_module')
    api project(':UpdateLib')

    //leakcanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.1'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.1'

    //ARoute compiler
    api rootProject.ext.dependence.libArouteApi
    annotationProcessor rootProject.ext.dependence.libArouteProcessor

    api rootProject.ext.dependence.EventBus

    implementation rootProject.ext.dependence.libSupportV7
    annotationProcessor rootProject.ext.dependence.libButterKnifeCompile

    //统一com.android.support 的版本号
    configurations.all {
        resolutionStrategy.eachDependency { details ->
            def requested = details.requested
            if (requested.group == 'com.android.support') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion '28.0.0'
                }
            }
        }
    }
}

